import cv2
import numpy as np

img = cv2.imread("/opt/data/face_landmark/train/add_pos/face_921_0.757344_10_19_0_47.png")


# lds = ["40.00000 148.00000 126.00000 256.00000 70.20500 187.15601 0.00000 1 09.82100 187.15601 0.00000 97.52700 213.11200 0.00000 69.52200 221.30800 0.00000 108.45500 221.30800 0.00000",
# "210.00000 172.00000 288.00000 272.00000 234.65199 217.72301 0.00000 268.64301 211.42900 0.00000 258.57101 237.23700 0.00000 239.05800 248.56700 0.00000 270.53101 241.64301 0.00000",
# "386.00000 132.00000 456.00000 214.00000 413.31201 165.82600 0.00000 445.14301 163.25900 0.00000 435.90201 185.33501 0.00000 411.77200 190.98199 0.00000 441.03601 192.00900 0.00000",
# "536.00000 104.00000 600.00000 206.00000 559.20099 146.83900 0.00000 591.75897 148.11600 0.00000 581.54498 168.54500 0.00000 557.28601 177.48199 0.00000 584.09802 180.03600 0.00000",
# "672.00000 132.00000 748.00000 224.00000 675.52197 171.74100 0.00000 700.86200 167.13400 0.00000 682.43298 194.77699 0.00000 694.52698 200.53600 1.00000 713.53101 194.77699 0.00000",
# "812.00000 110.00000 898.00000 222.00000 822.00000 157.00000 0.00000 859.00000 152.00000 0.00000 836.00000 178.00000 0.00000 831.00000 194.00000 0.00000 864.00000 190.00000 0.00000"]
# h,w = img.shape[:2]
h,w = 1,1


points = "47.8 50.400000000000006 73.7 47.8 63.8 65.2 44.10000000000001 71.2 53.0 73.4".split()
points = [float(x) for x in points]
def letter_bbox(img, target_size=128):
    np_img = np.array(img)
    h,w = np_img.shape[:2]
    im_ratio = h / w
    if im_ratio > 1:
        new_h = target_size
        new_w = int(new_h / im_ratio)

    else:
        new_w = target_size
        new_h = int(new_w * im_ratio)

    np_img = cv2.resize(np_img, (new_w, new_h))
    det_img = np.zeros((target_size, target_size, 3), dtype=np.uint8)
    det_img[:new_h, :new_w, :] = np_img

    return det_img
# 87.54153442382812 129.66238403320312 355.5540771484375 492.317626953125 157.18161010742188 247.5338897705078 286.86907958984375 253.90589904785156 218.35882568359375 337.43963623046875 167.34255981445312 399.81768798828125 267.37640380859375 405.1838684082031
# landmarks =list(map(int, list(map(float,"157.18161010742188 247.5338897705078 286.86907958984375 253.90589904785156 218.35882568359375 337.43963623046875 167.34255981445312 399.81768798828125 267.37640380859375 405.1838684082031".split()))))

# cv2.rectangle(img, (572,248), (598,266), [255,255,0], 2)
# img = letter_bbox(img)
for i in range(5):
    cv2.circle(img, (int(points[i*2]*w), int(points[i*2+1]*h)), 1, (255, 0, 0), 2)
    cv2.putText(img, str(i), (int(points[i*2]*w), int(points[i*2+1]*h )), 1, 1, (0, 255, 0), 1)
#     # cv2.rectangle(img,(302,250),(381,340),[255,0,0])

# for ld in lds:
#     points = ld.split()[4:]
#     points = [float(x) for x in points]
#     h,w =1,1
#     for i in range(5):
#         cv2.circle(img, (int(points[i*3]*w), int(points[i*3+1]*h)), 1, (255, 0, 0), 2)
#         cv2.putText(img, str(i), (int(points[i*3]*w), int(points[i*3+1]*h )), 1, 1, (0, 255, 0), 1)
#         # cv2.rectangle(img,(302,250),(381,340),[255,0,0])



cv2.imwrite("x.jpg",img)
# cv2.imshow("x", img)
# cv2.waitKey(0)




# 0 0.8509 0.8972 0.1207 0.1981
# 4 0.2286 0.1282 0.0177 0.0565